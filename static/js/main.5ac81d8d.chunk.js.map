{"version":3,"sources":["components/OrderForm.js","components/PackagesList.js","CardsPackage.js","dataLoader.js","App.js","reportWebVitals.js","index.js"],"names":["OrderForm","props","quantity","cardValue","state","onSubmit","bind","handleChange","target","this","setState","name","value","event","onOrderSubmit","preventDefault","inEditMode","title","disabled","htmlFor","type","min","max","onChange","required","onClick","onOrderRemove","Component","defaultProps","SinglePackage","packages","onModifyPackage","className","map","pack","index","getTotalPrice","toFixed","id","formatP","retValue","length","CardsPackage","price","Date","getTime","runQuery","query","a","fetch","method","credentials","headers","Origin","body","JSON","stringify","response","json","errors","Error","errorMessages","error","message","join","data","addPackageToCart","sku","items","removePackageFromCart","App","isLoading","errorMessage","activeId","switchToPackageEdit","createCardsPackage","updateCardsPackage","order","parseInt","prevState","filter","localPackage","getSKU","remotePackageId","cardsPackage","activePackage","indexOf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ac81d8d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  onOrderSubmit: PropTypes.func.isRequired,\n  onOrderRemove: PropTypes.func.isRequired,\n  quantity: PropTypes.number,\n  cardValue: PropTypes.number,\n  inEditMode: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nconst defaultProps = {\n  quantity: 0,\n  cardValue: 0,\n  inEditMode: false,\n  disabled: false,\n};\n\nclass OrderForm extends Component {\n  constructor(props) {\n    super(props);\n    const { quantity, cardValue } = props;\n    this.state = {\n      quantity,\n      cardValue,\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ target }) {\n    this.setState({\n      [target.name]: target.value,\n    });\n  }\n\n  onSubmit(event) {\n    this.props.onOrderSubmit(this.state);\n    event.preventDefault();\n  }\n\n  render() {\n    const { quantity, cardValue } = this.state;\n    const { inEditMode, title, disabled } = this.props;\n    return (\n      <form onSubmit={this.onSubmit}>\n        <fieldset>\n          <strong>{title}</strong>\n          <p>\n            <label htmlFor=\"quantity\">\n              Please enter quantity of cards:\n              &nbsp;\n              <input\n                type=\"number\"\n                name=\"quantity\"\n                min={1}\n                max={100}\n                onChange={this.handleChange}\n                value={quantity}\n                disabled={disabled}\n                required\n              />\n            </label>\n          </p>\n          <p>\n            <label htmlFor=\"cardValue\">\n              Please enter price for each card:\n              &nbsp;\n              <input\n                type=\"number\"\n                name=\"cardValue\"\n                min={5}\n                max={150}\n                onChange={this.handleChange}\n                value={cardValue}\n                disabled={disabled}\n                required\n              />\n            </label>\n          </p>\n          {!inEditMode && <button type=\"submit\" disabled={disabled}>Add Package</button>}\n          {inEditMode\n            && (\n              <>\n                <button type=\"submit\" disabled={disabled}>Save</button>\n                &nbsp;\n                <button type=\"button\" onClick={this.props.onOrderRemove} disabled={disabled}>Remove</button>\n              </>\n            )}\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nOrderForm.defaultProps = defaultProps;\nOrderForm.propTypes = propTypes;\n\nexport default OrderForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../PackagesList.css';\n\nconst propTypes = {\n  packages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onModifyPackage: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nconst defaultProps = {\n  disabled: false,\n};\n\nconst SinglePackage = ({ packages, onModifyPackage, disabled }) => (\n  <ul className=\"packages-list\">\n    {packages.map((pack, index) => {\n      const title = `Package ${index + 1}`;\n      return (\n        <li className=\"packages-list__item\" key={pack.id}>\n          <span>{title}</span>\n          <span>\n            â‚¬\n            {pack.getTotalPrice().toFixed(2)}\n          </span>\n          <button\n            type=\"button\"\n            onClick={() => onModifyPackage(pack.id)}\n            disabled={disabled}\n          >\n            Modify\n          </button>\n        </li>\n      );\n    })}\n  </ul>\n);\n\nSinglePackage.defaultProps = defaultProps;\nSinglePackage.propTypes = propTypes;\n\nexport default SinglePackage;\n","const formatP = (value = 0) => {\n  const retValue = `${value}`;\n  if (retValue.length < 5) {\n    return formatP(`0${retValue}`);\n  }\n  return retValue;\n};\n\nclass CardsPackage {\n  constructor(quantity = 1, price = 5) {\n    this.quantity = quantity;\n    this.price = price;\n    this.id = `${new Date().getTime()}`;\n  }\n\n  getSKU() {\n    return `LECA${formatP(this.quantity * this.price * 100)}`;\n  }\n\n  getTotalPrice() {\n    return this.quantity * this.price;\n  }\n}\n\nexport default CardsPackage;\n","/* eslint-env browser */\n\n/*\nmutation{\n  addPackageToCart(sku: \"LECA01000\", quantity: 5, personalMessage: false){\n    items {\n      id,\n      quantity,\n    },\n  }\n\n#  removeItemFromCart(cartItemId: \"10586\") {\n#    id\n#  }\n}\ncurl 'https://staging.nxte.nl:5000/graphql' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: https://staging.nxte.nl:5000' -H 'x-store: 7' --data-binary  --compressed\n*/\nasync function runQuery(query) {\n  const response = await fetch(\n    'https://staging.nxte.nl:5000/graphql',\n    {\n      method: 'POST',\n      credentials: 'include',\n      // mode: 'no-cors',\n      headers: {\n        'x-store': '7',\n        'Content-Type': 'application/json',\n        Origin: 'https://staging.nxte.nl:5000',\n        'Access-Control-Allow-Origin': 'https://staging.nxte.nl:5000',\n      },\n      body: JSON.stringify({ query }),\n    },\n  );\n  const json = await response.json();\n  const errors = json.errors || [];\n  if (errors.length > 0) {\n    if (!errors[0]) {\n      throw Error('There was an error with processing the request. Please try to update values and execute it again.');\n    }\n    const errorMessages = errors.map((error) => error.message);\n    throw Error(errorMessages.join('<br />'));\n  }\n  return json.data;\n}\n\nexport async function addPackageToCart(sku, quantity) {\n  const json = await runQuery(`mutation{\n    addPackageToCart(sku: \"${sku}\", quantity: ${quantity}, personalMessage: false){\n      id,\n      items {\n        id\n      }\n    }\n  }`);\n  const { addPackageToCart: { items } } = json;\n  return items[items.length - 1].id;\n}\n\nexport async function removePackageFromCart(id) {\n  const json = await runQuery(`mutation{\n    removeItemFromCart(cartItemId: \"${id}\"){\n      id,\n    }\n  }`);\n  return json.data;\n}\n\nexport default {\n  addPackageToCart,\n  removePackageFromCart,\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport OrderForm from './components/OrderForm';\nimport PackagesList from './components/PackagesList';\nimport CardsPackage from './CardsPackage';\nimport { addPackageToCart, removePackageFromCart } from './dataLoader';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      errorMessage: null,\n      activeId: null,\n      packages: [],\n    };\n    this.switchToPackageEdit = this.switchToPackageEdit.bind(this);\n    this.onOrderSubmit = this.onOrderSubmit.bind(this);\n    this.onOrderRemove = this.onOrderRemove.bind(this);\n    this.createCardsPackage = this.createCardsPackage.bind(this);\n    this.updateCardsPackage = this.updateCardsPackage.bind(this);\n  }\n\n  onOrderSubmit(order) {\n    this.setState({ isLoading: true, errorMessage: null });\n    const { activeId } = this.state;\n    const quantity = parseInt(order.quantity, 10);\n    const price = parseInt(order.cardValue, 10);\n    if (activeId) {\n      this.setState({ activeId: null });\n      this.updateCardsPackage(activeId, quantity, price);\n    } else {\n      this.createCardsPackage(quantity, price);\n    }\n  }\n\n  async onOrderRemove() {\n    this.setState({ isLoading: true, errorMessage: null });\n    const { activeId } = this.state;\n    try {\n      await removePackageFromCart(activeId);\n      this.setState((prevState) => ({\n        activeId: null,\n        packages: prevState.packages.filter((pack) => pack.id !== activeId),\n      }));\n    } catch (error) {\n      this.setState({ errorMessage: error.message });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  async createCardsPackage(quantity, price) {\n    const localPackage = new CardsPackage(quantity, price);\n    try {\n      const remotePackageId = await addPackageToCart(localPackage.getSKU(), localPackage.quantity);\n      localPackage.id = remotePackageId;\n      this.setState((prevState) => ({\n        packages: [\n          ...prevState.packages,\n          localPackage,\n        ],\n      }));\n    } catch (error) {\n      this.setState({ errorMessage: error.message });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  updateCardsPackage(id, quantity, price) {\n    this.setState((prevState) => ({\n      packages: prevState.packages.map((cardsPackage) => {\n        if (cardsPackage.id === id) {\n          cardsPackage.quantity = quantity;\n          cardsPackage.price = price;\n        }\n        return cardsPackage;\n      }),\n    }));\n  }\n\n  switchToPackageEdit(id) {\n    this.setState({ activeId: id });\n  }\n\n  render() {\n    const {\n      packages, activeId, errorMessage, isLoading,\n    } = this.state;\n    const activePackage = packages.filter((pack) => pack.id === activeId)[0] || {};\n    return (\n      <div className=\"App\">\n        {errorMessage}\n        <PackagesList\n          packages={packages}\n          onModifyPackage={this.switchToPackageEdit}\n          disabled={!!activeId || isLoading}\n        />\n        <OrderForm\n          title={`Package ${(activeId ? packages.indexOf(activePackage) : packages.length) + 1}`}\n          key={activeId || packages.length}\n          onOrderSubmit={this.onOrderSubmit}\n          onOrderRemove={this.onOrderRemove}\n          quantity={activePackage.quantity}\n          cardValue={activePackage.price}\n          inEditMode={!!activeId}\n          disabled={isLoading}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable */\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}