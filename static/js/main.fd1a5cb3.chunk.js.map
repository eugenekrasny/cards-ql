{"version":3,"sources":["components/OrderForm.js","components/PackagesList.js","utils/dataLoader.js","App.js","reportWebVitals.js","index.js"],"names":["OrderForm","props","quantity","price","state","onSubmit","bind","handleChange","target","this","setState","name","value","event","onPackageSubmit","preventDefault","inEditMode","title","disabled","onPackageRemove","onEditCancel","htmlFor","type","min","max","onChange","required","onClick","Component","defaultProps","SinglePackage","packages","onModifyPackage","className","map","index","id","toFixed","formatSkuSuffix","skuSuffix","length","runQuery","query","a","fetch","method","credentials","headers","body","JSON","stringify","response","json","errors","Error","errorMessages","error","message","join","data","addPackageToCart","items","updateItemInCart","removePackageFromCart","App","isLoading","errorMessage","activeId","switchToPackageEdit","cancelPackageEdit","createCardsPackage","updateCardsPackage","pack","parseInt","prevState","filter","packageId","cardsPackage","activePackage","PackagesList","indexOf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd1a5cb3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  onPackageSubmit: PropTypes.func.isRequired,\n  onPackageRemove: PropTypes.func.isRequired,\n  onEditCancel: PropTypes.func.isRequired,\n  quantity: PropTypes.number,\n  price: PropTypes.number,\n  inEditMode: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nconst defaultProps = {\n  quantity: 0,\n  price: 0,\n  inEditMode: false,\n  disabled: false,\n};\n\nclass OrderForm extends Component {\n  constructor(props) {\n    super(props);\n    const { quantity, price } = props;\n    this.state = {\n      quantity,\n      price,\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ target }) {\n    this.setState({\n      [target.name]: target.value,\n    });\n  }\n\n  onSubmit(event) {\n    const { onPackageSubmit } = this.props;\n    onPackageSubmit(this.state);\n    event.preventDefault();\n  }\n\n  render() {\n    const { quantity, price } = this.state;\n    const {\n      inEditMode,\n      title,\n      disabled,\n      onPackageRemove,\n      onEditCancel,\n    } = this.props;\n    return (\n      <form onSubmit={this.onSubmit}>\n        <fieldset>\n          <strong>{title}</strong>\n          <p>\n            <label htmlFor=\"quantity\">\n              Please enter quantity of cards:\n              &nbsp;\n              <input\n                type=\"number\"\n                name=\"quantity\"\n                min={1}\n                max={100}\n                onChange={this.handleChange}\n                value={quantity}\n                disabled={disabled}\n                required\n              />\n            </label>\n          </p>\n          <p>\n            <label htmlFor=\"price\">\n              Please enter price for each card:\n              &nbsp;\n              <input\n                type=\"number\"\n                name=\"price\"\n                min={5}\n                max={150}\n                onChange={this.handleChange}\n                value={price}\n                disabled={disabled || inEditMode}\n                required\n              />\n            </label>\n          </p>\n          {!inEditMode && <button type=\"submit\" disabled={disabled}>Add Package</button>}\n          {inEditMode\n            && (\n              <>\n                <button type=\"submit\" disabled={disabled}>Save</button>\n                &nbsp;\n                <button type=\"button\" onClick={onPackageRemove} disabled={disabled}>Remove</button>\n                &nbsp;\n                <button type=\"button\" onClick={onEditCancel} disabled={disabled}>Cancel</button>\n              </>\n            )}\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nOrderForm.defaultProps = defaultProps;\nOrderForm.propTypes = propTypes;\n\nexport default OrderForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/packages-list.css';\n\nconst propTypes = {\n  packages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onModifyPackage: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nconst defaultProps = {\n  disabled: false,\n};\n\nconst SinglePackage = ({ packages, onModifyPackage, disabled }) => (\n  <ul className=\"packages-list\">\n    {packages.map(({ id, quantity, price }, index) => {\n      const title = `Package ${index + 1}`;\n      return (\n        <li className=\"packages-list__item\" key={id}>\n          <span>{title}</span>\n          <span>\n            â‚¬\n            {(price * quantity).toFixed(2)}\n          </span>\n          <button\n            type=\"button\"\n            onClick={() => onModifyPackage(id)}\n            disabled={disabled}\n          >\n            Modify\n          </button>\n        </li>\n      );\n    })}\n  </ul>\n);\n\nSinglePackage.defaultProps = defaultProps;\nSinglePackage.propTypes = propTypes;\n\nexport default SinglePackage;\n","/* eslint-env browser */\n\nconst formatSkuSuffix = (value = 0) => {\n  const skuSuffix = `${value}`;\n  if (skuSuffix.length < 5) {\n    return formatSkuSuffix(`0${skuSuffix}`);\n  }\n  return skuSuffix;\n};\n\nasync function runQuery(query) {\n  const response = await fetch(\n    'https://staging.nxte.nl:5000/graphql',\n    {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'x-store': '7',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ query }),\n    },\n  );\n  const json = await response.json();\n  const errors = json.errors || [];\n  if (errors.length > 0) {\n    if (!errors[0]) {\n      throw Error('There was an error with processing the request. Please try to update values and execute it again.');\n    }\n    const errorMessages = errors.map((error) => error.message);\n    throw Error(errorMessages.join('<br />'));\n  }\n  return json.data;\n}\n\nexport async function addPackageToCart(quantity, price) {\n  const json = await runQuery(`mutation {\n    addPackageToCart(sku: \"LECA${formatSkuSuffix(quantity * price * 100)}\", quantity: ${quantity}, personalMessage: false) {\n      id,\n      items {\n        id\n      }\n    }\n  }`);\n  const { addPackageToCart: { items } } = json;\n  return items[items.length - 1].id;\n}\n\nexport async function updateItemInCart(id, quantity) {\n  const json = await runQuery(`mutation {\n    updateItemInCart(cartItemId: \"${id}\", quantity: ${quantity}) {\n      items {\n        id\n      }\n    }\n  }`);\n  const { addPackageToCart: { items } } = json;\n  return items[items.length - 1].id;\n}\n\nexport async function removePackageFromCart(id) {\n  const json = await runQuery(`mutation {\n    removeItemFromCart(cartItemId: \"${id}\") {\n      id,\n    }\n  }`);\n  return json.data;\n}\n","import React, { Component } from 'react';\nimport './styles/app.css';\nimport OrderForm from './components/OrderForm';\nimport PackagesList from './components/PackagesList';\nimport { addPackageToCart, updateItemInCart, removePackageFromCart } from './utils/dataLoader';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      errorMessage: null,\n      activeId: null,\n      packages: [],\n    };\n    this.switchToPackageEdit = this.switchToPackageEdit.bind(this);\n    this.cancelPackageEdit = this.cancelPackageEdit.bind(this);\n    this.onPackageSubmit = this.onPackageSubmit.bind(this);\n    this.onPackageRemove = this.onPackageRemove.bind(this);\n    this.createCardsPackage = this.createCardsPackage.bind(this);\n    this.updateCardsPackage = this.updateCardsPackage.bind(this);\n  }\n\n  onPackageSubmit(pack) {\n    this.setState({ isLoading: true, errorMessage: null });\n    const { activeId } = this.state;\n    const quantity = parseInt(pack.quantity, 10);\n    const price = parseInt(pack.price, 10);\n    if (activeId) {\n      this.updateCardsPackage(activeId, quantity, price);\n    } else {\n      this.createCardsPackage(quantity, price);\n    }\n  }\n\n  async onPackageRemove() {\n    this.setState({ isLoading: true, errorMessage: null });\n    const { activeId } = this.state;\n    try {\n      await removePackageFromCart(activeId);\n      this.cancelPackageEdit();\n      this.setState((prevState) => ({\n        packages: prevState.packages.filter((pack) => pack.id !== activeId),\n      }));\n    } catch (error) {\n      this.setState({ errorMessage: error.message });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  async createCardsPackage(quantity, price) {\n    try {\n      const packageId = await addPackageToCart(quantity, price);\n      this.setState((prevState) => ({\n        packages: [\n          ...prevState.packages,\n          {\n            quantity,\n            price,\n            id: packageId,\n          },\n        ],\n      }));\n    } catch (error) {\n      this.setState({ errorMessage: error.message });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  async updateCardsPackage(id, quantity, price) {\n    try {\n      await updateItemInCart(id, quantity);\n      this.cancelPackageEdit();\n      this.setState((prevState) => ({\n        packages: prevState.packages.map((cardsPackage) => {\n          if (cardsPackage.id === id) {\n            return {\n              ...cardsPackage,\n              quantity,\n              price,\n            };\n          }\n          return cardsPackage;\n        }),\n      }));\n    } catch (error) {\n      this.setState({ errorMessage: error.message });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  switchToPackageEdit(id) {\n    this.setState({ activeId: id });\n  }\n\n  cancelPackageEdit() {\n    this.setState({ activeId: null });\n  }\n\n  render() {\n    const {\n      packages,\n      activeId,\n      errorMessage,\n      isLoading,\n    } = this.state;\n    const activePackage = packages.filter((pack) => pack.id === activeId)[0] || {};\n    return (\n      <div className=\"app\">\n        <p className=\"app__error\">\n          {errorMessage}\n        </p>\n        <PackagesList\n          packages={packages}\n          onModifyPackage={this.switchToPackageEdit}\n          disabled={!!activeId || isLoading}\n        />\n        <OrderForm\n          title={`Package ${(activeId ? packages.indexOf(activePackage) : packages.length) + 1}`}\n          key={activeId || packages.length}\n          onPackageSubmit={this.onPackageSubmit}\n          onPackageRemove={this.onPackageRemove}\n          onEditCancel={this.cancelPackageEdit}\n          quantity={activePackage.quantity}\n          price={activePackage.price}\n          inEditMode={!!activeId}\n          disabled={isLoading}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}